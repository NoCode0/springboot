<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.atguigu.jsonData.dao.EmployeeMapper">
  <resultMap id="BaseResultMap" type="com.atguigu.jsonData.bean.Employee">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="loginacct" jdbcType="VARCHAR" property="loginacct" />
    <result column="userpswd" jdbcType="VARCHAR" property="userpswd" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="createtime" jdbcType="DATE" property="createtime" />
    <result column="d_id" jdbcType="INTEGER" property="dId" />
  </resultMap>
   <resultMap id="BaseResultMap2" type="com.atguigu.jsonData.bean.Employee">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="loginacct" jdbcType="VARCHAR" property="loginacct" />
    <result column="userpswd" jdbcType="VARCHAR" property="userpswd" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="createtime" jdbcType="DATE" property="createtime" />
    <association property="dept" javaType="com.atguigu.jsonData.bean.Department" >
    	<id column="id" property="id"/>
    	<result column="dept_name" property="deptName"/>
    </association>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, username, loginacct, userpswd, email, createtime, d_id
  </sql>
  <select id="selectWithDeptByExample" resultMap="BaseResultMap2">
  	select e.id, e.username, e.loginacct, e.userpswd, e.email, e.createtime, d.id,d.dept_name
  	from t_employee e 
  	left join t_department d
  	on  e.d_id = d.id
  	<if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.atguigu.jsonData.bean.EmployeeExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_employee
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_employee
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_employee
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.atguigu.jsonData.bean.EmployeeExample">
    delete from t_employee
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.atguigu.jsonData.bean.Employee">
    insert into t_employee (id, username, loginacct, 
      userpswd, email, createtime, 
      d_id)
    values (#{id,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{loginacct,jdbcType=VARCHAR}, 
      #{userpswd,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{createtime,jdbcType=VARCHAR}, 
      #{dId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.atguigu.jsonData.bean.Employee">
    insert into t_employee
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="loginacct != null">
        loginacct,
      </if>
      <if test="userpswd != null">
        userpswd,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="createtime != null">
        createtime,
      </if>
      <if test="dId != null">
        d_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="loginacct != null">
        #{loginacct,jdbcType=VARCHAR},
      </if>
      <if test="userpswd != null">
        #{userpswd,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null">
        #{createtime,jdbcType=VARCHAR},
      </if>
      <if test="dId != null">
        #{dId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.atguigu.jsonData.bean.EmployeeExample" resultType="java.lang.Long">
    select count(*) from t_employee
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update t_employee
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.username != null">
        username = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.loginacct != null">
        loginacct = #{record.loginacct,jdbcType=VARCHAR},
      </if>
      <if test="record.userpswd != null">
        userpswd = #{record.userpswd,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null">
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.createtime != null">
        createtime = #{record.createtime,jdbcType=VARCHAR},
      </if>
      <if test="record.dId != null">
        d_id = #{record.dId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update t_employee
    set id = #{record.id,jdbcType=INTEGER},
      username = #{record.username,jdbcType=VARCHAR},
      loginacct = #{record.loginacct,jdbcType=VARCHAR},
      userpswd = #{record.userpswd,jdbcType=VARCHAR},
      email = #{record.email,jdbcType=VARCHAR},
      createtime = #{record.createtime,jdbcType=VARCHAR},
      d_id = #{record.dId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.atguigu.jsonData.bean.Employee">
    update t_employee
    <set>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="loginacct != null">
        loginacct = #{loginacct,jdbcType=VARCHAR},
      </if>
      <if test="userpswd != null">
        userpswd = #{userpswd,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null">
        createtime = #{createtime,jdbcType=VARCHAR},
      </if>
      <if test="dId != null">
        d_id = #{dId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.atguigu.jsonData.bean.Employee">
    update t_employee
    set username = #{username,jdbcType=VARCHAR},
      loginacct = #{loginacct,jdbcType=VARCHAR},
      userpswd = #{userpswd,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      createtime = #{createtime,jdbcType=VARCHAR},
      d_id = #{dId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>